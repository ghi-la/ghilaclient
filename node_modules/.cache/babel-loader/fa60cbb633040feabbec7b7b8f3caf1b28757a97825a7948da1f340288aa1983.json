{"ast":null,"code":"var _jsxFileName = \"/Users/ghila/Desktop/DEV/ghilaclient/ghilaclient/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Snackbar } from '@mui/joy';\nimport { useSelector } from 'react-redux';\nimport './App.css';\nimport Login from './Views/Login/Login';\nimport { checkHealth } from './store/services/userService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const dispatch = useDispatch();\n  const snackbar = useSelector(state => state.app.openSnackbar);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"solid\",\n      color: \"primary\",\n      onClick: () => console.log(checkHealth()),\n      children: \"API Healt check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.isOpen,\n      onClose: () => console.log('close'),\n      variant: \"outlined\",\n      color: \"success\",\n      autoHideDuration: 3000,\n      anchorOrigin: {\n        horizontal: 'left',\n        vertical: 'bottom'\n      },\n      children: \"Ciao\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"+vpzgFneIxH62SY92SzD3KLhou8=\", false, function () {\n  return [useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","Snackbar","useSelector","Login","checkHealth","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","snackbar","state","app","openSnackbar","children","variant","color","onClick","console","log","fileName","_jsxFileName","lineNumber","columnNumber","open","isOpen","onClose","autoHideDuration","anchorOrigin","horizontal","vertical","_c","$RefreshReg$"],"sources":["/Users/ghila/Desktop/DEV/ghilaclient/ghilaclient/src/App.tsx"],"sourcesContent":["import { Button, Snackbar } from '@mui/joy';\nimport { useSelector } from 'react-redux';\nimport './App.css';\nimport Login from './Views/Login/Login';\nimport { checkHealth } from './store/services/userService';\n\nfunction App() {\n  // const dispatch = useDispatch();\n  const snackbar = useSelector((state: any) => state.app.openSnackbar);\n  return (\n    <>\n      <Button\n        variant=\"solid\"\n        color=\"primary\"\n        onClick={() => console.log(checkHealth())}\n      >\n        API Healt check\n      </Button>\n      <Login />\n      <Snackbar\n        open={snackbar.isOpen}\n        onClose={() => console.log('close')}\n        variant=\"outlined\"\n        color=\"success\"\n        autoHideDuration={3000}\n        anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n      >\n        Ciao\n      </Snackbar>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,UAAU;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,WAAW,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAMC,QAAQ,GAAGT,WAAW,CAAEU,KAAU,IAAKA,KAAK,CAACC,GAAG,CAACC,YAAY,CAAC;EACpE,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA,CAACN,MAAM;MACLgB,OAAO,EAAC,OAAO;MACfC,KAAK,EAAC,SAAS;MACfC,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAChB,WAAW,CAAC,CAAC,CAAE;MAAAW,QAAA,EAC3C;IAED;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTlB,OAAA,CAACH,KAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTlB,OAAA,CAACL,QAAQ;MACPwB,IAAI,EAAEd,QAAQ,CAACe,MAAO;MACtBC,OAAO,EAAEA,CAAA,KAAMR,OAAO,CAACC,GAAG,CAAC,OAAO,CAAE;MACpCJ,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAC,SAAS;MACfW,gBAAgB,EAAE,IAAK;MACvBC,YAAY,EAAE;QAAEC,UAAU,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAhB,QAAA,EAC1D;IAED;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA,eACX,CAAC;AAEP;AAACd,EAAA,CAzBQD,GAAG;EAAA,QAEOP,WAAW;AAAA;AAAA8B,EAAA,GAFrBvB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}