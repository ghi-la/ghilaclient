{"ast":null,"code":"var _jsxFileName = \"/Users/ghila/Desktop/DEV/ghilaclient/ghilaclient/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Snackbar } from '@mui/joy';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport Login from './Views/Login/Login';\nimport { closeSnackbar, openSnackbar } from './store/actions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const snackbar = useSelector(state => state.app.snackbar);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"solid\",\n      color: \"primary\",\n      onClick: () => dispatch(openSnackbar('success', 'API is healthy')),\n      children: \"API Healt check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar === null || snackbar === void 0 ? void 0 : snackbar.isOpen,\n      onClose: () => dispatch(closeSnackbar()),\n      variant: \"solid\",\n      color: \"success\",\n      autoHideDuration: 2000,\n      anchorOrigin: {\n        horizontal: 'left',\n        vertical: 'bottom'\n      },\n      children: snackbar === null || snackbar === void 0 ? void 0 : snackbar.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"LT71WpURzfn0C+MBzqOsnJB2N2M=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","Snackbar","useDispatch","useSelector","Login","closeSnackbar","openSnackbar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dispatch","snackbar","state","app","children","variant","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","open","isOpen","onClose","autoHideDuration","anchorOrigin","horizontal","vertical","message","_c","$RefreshReg$"],"sources":["/Users/ghila/Desktop/DEV/ghilaclient/ghilaclient/src/App.tsx"],"sourcesContent":["import { Button, Snackbar } from '@mui/joy';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport Login from './Views/Login/Login';\nimport { closeSnackbar, openSnackbar } from './store/actions';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const snackbar = useSelector((state: any) => state.app.snackbar);\n  return (\n    <>\n      <Button\n        variant=\"solid\"\n        color=\"primary\"\n        onClick={() => dispatch(openSnackbar('success', 'API is healthy'))}\n      >\n        API Healt check\n      </Button>\n      <Login />\n      <Snackbar\n        open={snackbar?.isOpen}\n        onClose={() => dispatch(closeSnackbar())}\n        variant=\"solid\"\n        color=\"success\"\n        autoHideDuration={2000}\n        anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n      >\n        {snackbar?.message}\n      </Snackbar>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,UAAU;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,aAAa,EAAEC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGX,WAAW,CAAEY,KAAU,IAAKA,KAAK,CAACC,GAAG,CAACF,QAAQ,CAAC;EAChE,oBACEN,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA,CAACR,MAAM;MACLkB,OAAO,EAAC,OAAO;MACfC,KAAK,EAAC,SAAS;MACfC,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAACP,YAAY,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAE;MAAAW,QAAA,EACpE;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACThB,OAAA,CAACJ,KAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACThB,OAAA,CAACP,QAAQ;MACPwB,IAAI,EAAEX,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEY,MAAO;MACvBC,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAACR,aAAa,CAAC,CAAC,CAAE;MACzCa,OAAO,EAAC,OAAO;MACfC,KAAK,EAAC,SAAS;MACfS,gBAAgB,EAAE,IAAK;MACvBC,YAAY,EAAE;QAAEC,UAAU,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAd,QAAA,EAExDH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEkB;IAAO;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA,eACX,CAAC;AAEP;AAACZ,EAAA,CAzBQD,GAAG;EAAA,QACOT,WAAW,EACXC,WAAW;AAAA;AAAA8B,EAAA,GAFrBtB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}