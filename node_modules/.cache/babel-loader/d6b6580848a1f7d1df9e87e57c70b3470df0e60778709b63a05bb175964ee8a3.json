{"ast":null,"code":"var _jsxFileName = \"/Users/ghila/Desktop/DEV/ghilaclient/ghilaclient/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Snackbar } from '@mui/joy';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport Spinner from './Components/Spinner';\nimport Login from './Views/Login/Login';\nimport { closeSnackbar, openSnackbar } from './store/actions';\nimport { checkHealth } from './store/services/userService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const snackbar = useSelector(state => state.app.snackbar);\n  const loading = useSelector(state => state.app.isLoading);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"solid\",\n      color: \"primary\",\n      onClick: () => {\n        dispatch(isLoading());\n        checkHealth().then(res => {\n          dispatch(openSnackbar('success', 'API is healthy'));\n        }).catch(err => {\n          dispatch(openSnackbar('danger', 'API is not healthy'));\n        });\n      },\n      children: \"API Healt check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n      open: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar === null || snackbar === void 0 ? void 0 : snackbar.isOpen,\n      onClose: () => dispatch(closeSnackbar()),\n      variant: \"solid\",\n      color: snackbar === null || snackbar === void 0 ? void 0 : snackbar.severity,\n      autoHideDuration: 2000,\n      anchorOrigin: {\n        horizontal: 'left',\n        vertical: 'bottom'\n      },\n      children: snackbar === null || snackbar === void 0 ? void 0 : snackbar.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"E8IeAOXAMJavj4MOo0o3HfWm/9Y=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","Snackbar","useDispatch","useSelector","Spinner","Login","closeSnackbar","openSnackbar","checkHealth","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dispatch","snackbar","state","app","loading","isLoading","children","variant","color","onClick","then","res","catch","err","fileName","_jsxFileName","lineNumber","columnNumber","open","isOpen","onClose","severity","autoHideDuration","anchorOrigin","horizontal","vertical","message","_c","$RefreshReg$"],"sources":["/Users/ghila/Desktop/DEV/ghilaclient/ghilaclient/src/App.tsx"],"sourcesContent":["import { Button, Snackbar } from '@mui/joy';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport Spinner from './Components/Spinner';\nimport Login from './Views/Login/Login';\nimport { closeSnackbar, openSnackbar } from './store/actions';\nimport { checkHealth } from './store/services/userService';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const snackbar = useSelector((state: any) => state.app.snackbar);\n  const loading = useSelector((state: any) => state.app.isLoading);\n\n  return (\n    <>\n      <Button\n        variant=\"solid\"\n        color=\"primary\"\n        onClick={() => {\n          dispatch(isLoading());\n          checkHealth()\n            .then((res) => {\n              dispatch(openSnackbar('success', 'API is healthy'));\n            })\n            .catch((err) => {\n              dispatch(openSnackbar('danger', 'API is not healthy'));\n            });\n        }}\n      >\n        API Healt check\n      </Button>\n      <Login />\n      <Spinner open={loading} />\n      <Snackbar\n        open={snackbar?.isOpen}\n        onClose={() => dispatch(closeSnackbar())}\n        variant=\"solid\"\n        color={snackbar?.severity}\n        autoHideDuration={2000}\n        anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n      >\n        {snackbar?.message}\n      </Snackbar>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,UAAU;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,aAAa,EAAEC,YAAY,QAAQ,iBAAiB;AAC7D,SAASC,WAAW,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,QAAQ,GAAGb,WAAW,CAAEc,KAAU,IAAKA,KAAK,CAACC,GAAG,CAACF,QAAQ,CAAC;EAChE,MAAMG,OAAO,GAAGhB,WAAW,CAAEc,KAAU,IAAKA,KAAK,CAACC,GAAG,CAACE,SAAS,CAAC;EAEhE,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA,CAACV,MAAM;MACLsB,OAAO,EAAC,OAAO;MACfC,KAAK,EAAC,SAAS;MACfC,OAAO,EAAEA,CAAA,KAAM;QACbT,QAAQ,CAACK,SAAS,CAAC,CAAC,CAAC;QACrBZ,WAAW,CAAC,CAAC,CACViB,IAAI,CAAEC,GAAG,IAAK;UACbX,QAAQ,CAACR,YAAY,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;QACrD,CAAC,CAAC,CACDoB,KAAK,CAAEC,GAAG,IAAK;UACdb,QAAQ,CAACR,YAAY,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAC;QACxD,CAAC,CAAC;MACN,CAAE;MAAAc,QAAA,EACH;IAED;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtB,OAAA,CAACL,KAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTtB,OAAA,CAACN,OAAO;MAAC6B,IAAI,EAAEd;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1BtB,OAAA,CAACT,QAAQ;MACPgC,IAAI,EAAEjB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEkB,MAAO;MACvBC,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAACT,aAAa,CAAC,CAAC,CAAE;MACzCgB,OAAO,EAAC,OAAO;MACfC,KAAK,EAAEP,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEoB,QAAS;MAC1BC,gBAAgB,EAAE,IAAK;MACvBC,YAAY,EAAE;QAAEC,UAAU,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAnB,QAAA,EAExDL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEyB;IAAO;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA,eACX,CAAC;AAEP;AAAClB,EAAA,CArCQD,GAAG;EAAA,QACOX,WAAW,EACXC,WAAW,EACZA,WAAW;AAAA;AAAAuC,EAAA,GAHpB7B,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}